// potion: berserk

// external script
var move = import user_script/move
var weapon = import user_script/weapon
var follow = import user_script/follow

// initialize
move.set_harvest_pick(false)

// 変数
var perfected_attack_motion_count = 0
var perfected_attack_state32_count = 0
var perfected_attack_state32_flg = false
var perfected_alive = true

func boss_attack()
  ?foe = bearer
    state1()
  :?foe = elementalist
    state2()
  :?foe = perfected
    state3()
  // 変身直後はnameが存在しないのでstateでmask判定
  :?foe.state = -1 & perfected_alive
    weapon._equip(11, false)
  :
    move.action()

// 第一形態
func state1()
  // 変身前にhammerで先制攻撃可能
  ?foe.distance <= 24 & foe.distance > 18 & (item.GetCooldown("hammer") = 0 | buffs.string = bardiche)
    weapon._equip(4, false)
    activate R
  // 撃破後のmask
  :?foe.state = 124
    weapon._equip(11, false)
  // 戦闘前の待機
  :?foe.state = 100 | foe.state = 101 | foe.state = 102 | foe.state = 126 | foe.state = 127
    move.action()
  :?foe.distance > 11
    weapon._equip(52, false)
  :?item.GetCooldown("mask") = 0
    weapon._equip(11, false)
    activate R
  :?item.GetCooldown("bardiche") = 0 | buffs.string = bardiche
    weapon._equip(6, false)
    activate R
  :?item.GetCooldown("blade") = 0
    weapon._equip(0, false)
    activate R
  :?foe.debuffs.string ! "damage"
    weapon._equip(12, false)
    activate potion
  :?foe.debuffs.string ! "chill:6"
    weapon._equip(16, false)
  :
    weapon._equip(15, false)

// 第二形態
func state2()
  // 目の表示を取得
  // ∞ ♥ * φ ❄ 
  var symbol = draw.GetSymbol(54, 9)
  >`10,10,week = @symbol@

  // 撃破後のmask
  ?foe.state = 107
    weapon._equip(11, false)
  :?foe.distance > 11
    weapon._equip(52, false)
  :
    // 弱点属性の判別
    var weapon_index = 15
    ?symbol = ∞
      weapon_index = 16
    :?symbol = ♥
      weapon_index = 12
    :?symbol = "*"
      weapon_index = 13
    :?symbol = φ
      weapon_index = 14
    :?symbol = ❄
      weapon_index = 15
    weapon._equip(weapon_index, false)

// 第三形態
func state3()
  follow.ignition(0)
  // 撃破後の行動管理フラグ
  ?foe.hp > 0
    perfected_alive = true
  :
    perfected_alive = false
  // 光線回避
  ?foe.state = 115
    perfected_attack_state32_count = 0
    perfected_attack_motion_count++
    ?perfected_attack_motion_count >= 60
      ?item.GetCooldown("mind") <= 0
        weapon._equip(53, false)
      :
        weapon._equip(49, false)
  :
    // シールド起動時のスタン回避
    perfected_attack_motion_count = 0
    ?foe.state = 32
      ?!perfected_attack_state32_flg
        perfected_attack_state32_count++
        perfected_attack_state32_flg = true
    :?foe.state ! 32
      perfected_attack_state32_flg = false
    ?(foe.state = 32 | foe.state = 33) & perfected_attack_state32_count = 3
      ?item.GetCooldown("mind") <= 0
        weapon._equip(53, false)
      :
        weapon._equip(49, false)
    // 光線回避後、またはシールド回避後に起動
    :?foe.distance >= 9
      weapon._equip(52, false)
    :?foe.armor > 0
      weapon._equip(15, false)
    :?foe.debuffs.string ! "damage"
      weapon._equip(12, false)
    :?foe.debuffs.string ! "chill:6"
      weapon._equip(16, false)
    :?item.GetCooldown("bardiche") = 0 | buffs.string = bardiche
      weapon._equip(6, false)
      activate R
    :?item.GetCooldown("blade") = 0
      weapon._equip(0, false)
      activate R
    :?item.GetCooldown("mask") = 0
      weapon._equip(11, false)
      activate R
   :?hp < 15
     weapon._equip(17, false)
    :
      weapon._equip(15, false)
    
// アルカディアの偵察兵
func normal_attack()
  // todo: ガイコツの腕がDPS高めでいいらしい…エンチャ候補
  ?foe.distance > 16
    move.speed_walk()
  :?foe.distance > 11
    weapon._equip(51, false)
  :?foe.debuffs.string ! "damage"
    weapon._equip(20, false)
  :?foe.debuffs.string ! "chill:6"
    weapon._equip(24, false)
  :
    weapon._equip(23, false)

/** ロッキー高原 **/
?loc = rocky_plateau
  ?summon.count = 0 & time > 1
    follow.fire_talisman()
  // x座標でボス位置判定している、☆11以上前提(200)、それ以下なら120とか
  :?foe.count = 0 & pos.x < 220
    move.action()
  :?foe = acronian_scout | pos.x < 120
    normal_attack()
  :
    boss_attack()